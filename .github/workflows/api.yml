name: API

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: 'app/api'
        sparse-checkout-cone-mode: false

    - name: Move api files to pwd
      run: |
        ls -la
        mv app/api/* .
        rm -rf app
        ls -la

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m venv --copies antenv
        source antenv/bin/activate
        pip install -r requirements.txt

    # Add any other necessary build steps here (e.g., tests)
    #- name: Run tests
    #     TODO

  deploy-dev:
    if: github.event_name == 'pull_request'
    needs: build
    concurrency: dev
    environment: dev
    runs-on: ubuntu-latest
    steps:
    - name: Log in with Azure
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v3
      with:
        app-name: 'ssc-assistant-api'
        slot-name: 'dev'
        # az webapp deployment list-publishing-profiles --name ssc-assistant-dev-api --resource-group YourResourceGroupName --xml (save as secret)
        publish-profile: ${{ secrets.API_PUBLISH_PROFILE }}
        package: '.'
        startup-command: ''

  deploy-pilot-prod:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    concurrency: pilot-prod
    needs: build
    steps:
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ssc-assistant-api'
          slot-name: 'production'
          # az webapp deployment list-publishing-profiles --name ssc-assistant-api --resource-group YourResourceGroupName --xml (save as secret)
          publish-profile: ${{ secrets.API_PUBLISH_PROFILE }}
          package: '.'
          startup-command: ''