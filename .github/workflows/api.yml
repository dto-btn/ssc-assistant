name: API

on:
  push:
    branches:
      - main
      - 134-connect-assistant-to-archibus-api
  pull_request:

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: 'app/api'
        sparse-checkout-cone-mode: false

    - name: Move api files to pwd
      run: |
        ls -la
        mv app/api/* .
        rm -rf app
        ls -la

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m venv --copies antenv
        source antenv/bin/activate
        pip install -r requirements.txt

    # Add any other necessary build steps here (e.g., tests)
    #- name: Run tests
    #     TODO
    - name: Zip artifact for deployment
      run: zip release.zip ./* -r

    - name: Upload artifact for deployment job
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/134-connect-assistant-to-archibus-api'
      uses: actions/upload-artifact@v3
      with:
        name: api
        path: release.zip

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/134-connect-assistant-to-archibus-api'
    needs: build
    environment: ${{ github.ref == 'refs/heads/main' && 'pilot-prod' || 'dev'}}
    runs-on: ubuntu-latest

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: api

    - name: Log in with Azure
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ github.ref == 'refs/heads/main' && 'ssc-assistant-api' || 'ssc-assistant-dev-api'}}
        # az webapp deployment list-publishing-profiles --name ssc-assistant-dev-api --resource-group YourResourceGroupName --xml (save as secret)
        publish-profile: ${{ secrets.API_PUBLISH_PROFILE }}
        package: 'release.zip'
        startup-command: ''