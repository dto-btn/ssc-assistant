name: Frontend

on:
  workflow_call:
    inputs:
      allowed-tools:
        type: string
        required: true
      disabled-features:
        type: string
        required: true
      environment:
        type: string
        required: true
      app-name:
        type: string
        required: true
      enable-playground:
        type: boolean
        default: false
    secrets: 
      FRONTEND_PUBLISH_PROFILE:
        required: false
      AZURE_CREDENTIALS:
        required: true
      VITE_AZURE_AD_CLIENT_ID:
        required: false
      VITE_AZURE_AD_TENANT_ID:
        required: false
      VITE_CLARITY_TOKEN:
        required: false

permissions:
  id-token: write
  contents: read

jobs:
  build:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: 'app/frontend'
        sparse-checkout-cone-mode: false

    - name: Move api files to pwd
      run: |
        ls -la
        mv app/frontend/* .
        rm -rf app
        ls -la

    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - run: |
        npm install
        npm run build --if-present
        npm run test --if-present
      working-directory: '.'
      env:
        VITE_AZURE_AD_CLIENT_ID: ${{ secrets.VITE_AZURE_AD_CLIENT_ID }}
        VITE_AZURE_AD_API_SCOPE: ${{ secrets.VITE_AZURE_AD_API_SCOPE }}
        VITE_AZURE_AD_TENANT_ID: ${{ secrets.VITE_AZURE_AD_TENANT_ID }}
        VITE_ALLOWED_TOOLS: ${{ inputs.allowed-tools }}
        VITE_DISABLED_FEATURES: ${{ inputs.disabled-features }}
        VITE_CLARITY_TOKEN: ${{ secrets.VITE_CLARITY_TOKEN }}
        VITE_PLAYGROUND_ON: ${{ inputs.enable-playground }}
        VITE_SHOW_DEV_BANNER: ${{ inputs.environment != 'pilot-prod' }}

    # This step will only run when the event is a push to the main branch
    - name: Zip artifact for deployment
      if: github.event_name != 'pull_request'
      run: zip release.zip ./* -r

    # This step will only run when the event is a push to the main branch
    - name: Upload artifact for deployment job
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4.3.3
      with:
        name: node-app ${{ inputs.environment }}
        path: release.zip

  deploy:  # TEMPORARY DEPLOY ONLY ON ARCHIBUS BRANCH OR MAIN
    if: github.event_name != 'pull_request'
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Log in with Azure (163gc)
      if: inputs.environment != 'prod'
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    - name: Log in with Azure (163ent)
      if: inputs.environment == 'prod'
      uses: azure/login@v2
      whit:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Download artifact from build job
      uses: actions/download-artifact@v4.1.8
      with:
        name: node-app ${{ inputs.environment }}

    # - name: Unzip artifact for deployment
    #   run: unzip release.zip

    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v3.0.1
      with:
        app-name: ${{ inputs.app-name }}
        # az webapp deployment list-publishing-profiles --name ssc-assistant-api --resource-group YourResourceGroupName --xml (save as secret)
        publish-profile: ${{ secrets.FRONTEND_PUBLISH_PROFILE }}
        # very important: https://learn.microsoft.com/en-us/azure/app-service/deploy-run-package#enable-running-from-package
        package: 'release.zip'