name: Frontend

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    environment: ${{ github.ref == 'refs/heads/main' && 'pilot-prod' || 'dev'}}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: 'app/frontend'
        sparse-checkout-cone-mode: false

    - name: Move api files to pwd
      run: |
        ls -la
        mv app/frontend/* .
        rm -rf app
        ls -la

    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    - run: |
        npm install
        npm run build --if-present
        npm run test --if-present
      working-directory: '.'
      env:
        VITE_AZURE_AD_CLIENT_ID: ${{ secrets.VITE_AZURE_AD_CLIENT_ID }}
        VITE_AZURE_AD_TENANT_ID: ${{ secrets.VITE_AZURE_AD_TENANT_ID }}

    # This step will only run when the event is a push to the main branch
    - name: Zip artifact for deployment
      run: zip release.zip ./* -r

    # This step will only run when the event is a push to the main branch
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: release.zip

  deploy:  # TEMPORARY DEPLOY ONLY ON ARCHIBUS BRANCH OR MAIN
    if: github.ref == 'refs/heads/main' || github.ref == '134-connect-assistant-to-archibus-api'
    environment: ${{ github.ref == 'refs/heads/main' && 'pilot-prod' || 'dev'}}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Log in with Azure
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: node-app

    # - name: Unzip artifact for deployment
    #   run: unzip release.zip

    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ github.ref == 'refs/heads/main' && 'ssc-assistant' || 'ssc-assistant-dev'}}
        slot-name: 'production'
        # az webapp deployment list-publishing-profiles --name ssc-assistant-api --resource-group YourResourceGroupName --xml (save as secret)
        publish-profile: ${{ secrets.FRONTEND_PUBLISH_PROFILE }}
        # very important: https://learn.microsoft.com/en-us/azure/app-service/deploy-run-package#enable-running-from-package
        package: 'release.zip'

  # cleanup_artifacts:
  #   needs: 
  #     - build 
  #     - deploy-pilot-prod
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Delete artifacts
  #       run: |
  #         # Use GitHub's REST API to delete the artifacts
  #         curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
  #         "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${{ github.run_id }}"